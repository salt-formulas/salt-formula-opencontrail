{%- from "opencontrail/map.jinja" import config with context %}
{%- set ifmap = config.get('ifmap', {}) -%}
[DEFAULTS]
ifmap_server_ip={{ config.bind.address }}
ifmap_server_port=8443
{% if ifmap.get('engine', 'irond') != 'internal' -%}
ifmap_username=api-server
ifmap_password=api-server
{% endif -%}
cassandra_server_list={% for member in config.database.members %}{{ member.host }}:9160 {% endfor %}
listen_ip_addr=0.0.0.0
listen_port={{ config.bind.get('api_port', '8082') }}
{%- if config.aaa_mode is defined %}
aaa_mode={{ config.aaa_mode }}
cloud_admin_role={{ config.get('cloud_admin_role', 'admin') }}
{%- if config.global_read_only_role is defined %}
global_read_only_role={{ config.global_read_only_role }}
{%- endif %}
{%- else %}
multi_tenancy={{ config.get('multi_tenancy', 'true')|lower }}
{%- endif %}
log_file=/var/log/contrail/contrail-api.log
log_local=1
log_level=SYS_NOTICE
disc_server_ip={{ config.discovery.host }}
disc_server_port=5998
#zk_server_ip=10.0.102.31:2181,10.0.102.32:2181,10.0.102.33:2181
zk_server_ip={% for member in config.database.members %}{{ member.host }}:2181{% if not loop.last %},{% endif %}{% endfor %}
redis_server_ip=$__contrail_redis_ip__
{%- if config.message_queue.members is defined %}
rabbit_server={{ config.message_queue.members|join(',',attribute='host') }}
rabbit_ha_mode=True
{%- else %}
rabbit_server={{ config.message_queue.host }}
{%- endif %}
rabbit_port={{ config.message_queue.port }}
{%- if config.identity.engine == "keystone" and not config.get('k8s_enabled', False) %}
auth=keystone
region_name={{ config.identity.get('region', 'RegionOne') }}
{%- endif %}
#rabbit_port=5673{{ config.message_queue.port }}
{%- if config.message_queue.virtual_host is defined %}
rabbit_vhost={{config.message_queue.virtual_host}}
{%- endif %}
{%- if config.message_queue.user is defined %}
rabbit_user={{config.message_queue.user}}
{%- endif %}
{%- if config.message_queue.password is defined %}
rabbit_password={{config.message_queue.password}}
{%- endif %}
{% if config.override_rpf_default_by is defined %}
override_rpf_default_by={{ config.override_rpf_default_by | lower }}
{% endif %}
{%- if config.get('list_optimization_enabled', False) %}
list_optimization_enabled=True
{%- endif %}

[SECURITY]
use_certs=False
keyfile=/etc/contrail/ssl/private_keys/apiserver_key.pem
certfile=/etc/contrail/ssl/certs/apiserver.pem
ca_certs=/etc/contrail/ssl/certs/ca.pem

{% if config.quota is defined %}
[QUOTA]
{%- if config.quota.network is defined %}
virtual_network={{config.quota.network}}
{%- endif %}
{%- if config.quota.subnet is defined %}
subnet={{config.quota.subnet}}
{%- endif %}
{%- if config.quota.floating_ip is defined %}
floating_ip={{config.quota.floating_ip}}
{%- endif %}
{%- if config.quota.router is defined %}
logical_router={{config.quota.router}}
{%- endif %}
{%- if config.quota.secgroup is defined %}
security_group={{config.quota.secgroup}}
{%- endif %}
{%- if config.quota.secgroup_rule is defined %}
security_group_rule={{config.quota.secgroup_rule}}
{%- endif %}
{%- if config.quota.port is defined %}
virtual_machine_interface={{config.quota.port}}
{%- endif %}
{%- if config.quota.pool is defined %}
loadbalancer_pool={{config.quota.pool}}
{%- endif %}
{%- if config.quota.member is defined %}
loadbalancer_member={{config.quota.member}}
{%- endif %}
{%- if config.quota.health_monitor is defined %}
loadbalancer_healthmonitor={{config.quota.health_monitor}}
{%- endif %}
{%- if config.quota.vip is defined %}
virtual_ip={{config.quota.vip}}
{%- endif %}
{%- endif %}

{% if ifmap.get('engine', 'irond') == 'internal' %}
[IFMAP_SERVER]
ifmap_listen_ip={{ ifmap.get('bind', {}).get('host', '0.0.0.0') }}
ifmap_listen_port={{ ifmap.get('bind', {}).get('port', 8443) }}
ifmap_credentials=test:test test2:test2 test3:test3 api-server:api-server schema-transformer:schema-transformer svc-monitor:svc-monitor control-user:control-user-passwd control-node-0:control-node-0 control-node-1:control-node-1 control-node-2:control-node-2 control-node-3:control-node-3 control-node-4:control-node-4 control-node-5:control-node-5 control-node-6:control-node-6 control-node-7:control-node-7 control-node-8:control-node-8 control-node-9:control-node-9 control-node-10:control-node-10 control-node-1.dns:control-node-1.dns control-node-2.dns:control-node-2.dns control-node-3.dns:control-node-3.dns control-node-4.dns:control-node-4.dns control-node-5.dns:control-node-5.dns dhcp:dhcp visual:visual sensor:sensor mapclient:mapclient helper:mapclient reader:reader {% for member in ifmap.get('members', []) %}{{ member.user }}:{{ member.password }} {{ member.user }}.dns:{{ member.password }}.dns {% endfor %}
ifmap_key_path={{ ifmap.get('cert_dir', '/etc/contrail/ssl/certs/') }}{{ ifmap.get('basename_key', 'ifmap.key') }}
ifmap_cert_path={{ ifmap.get('cert_dir', '/etc/contrail/ssl/certs/') }}{{ ifmap.get('basename_crt', 'ifmap.crt') }}
{%- endif %}

[KEYSTONE]
keystone_sync_on_demand={{ config.identity.get('sync_on_demand', 'true') }}
